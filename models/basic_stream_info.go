// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BasicStreamInfo basic stream info
//
// swagger:model BasicStreamInfo
type BasicStreamInfo struct {

	// audio bitrate
	AudioBitrate int32 `json:"audioBitrate,omitempty"`

	// video bitrate
	VideoBitrate int32 `json:"videoBitrate,omitempty"`

	// video codec
	// Enum: [NOVIDEO VP8 H264 PNG H265]
	VideoCodec string `json:"videoCodec,omitempty"`

	// video height
	VideoHeight int32 `json:"videoHeight,omitempty"`

	// video width
	VideoWidth int32 `json:"videoWidth,omitempty"`
}

// Validate validates this basic stream info
func (m *BasicStreamInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateVideoCodec(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var basicStreamInfoTypeVideoCodecPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["NOVIDEO","VP8","H264","PNG","H265"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		basicStreamInfoTypeVideoCodecPropEnum = append(basicStreamInfoTypeVideoCodecPropEnum, v)
	}
}

const (

	// BasicStreamInfoVideoCodecNOVIDEO captures enum value "NOVIDEO"
	BasicStreamInfoVideoCodecNOVIDEO string = "NOVIDEO"

	// BasicStreamInfoVideoCodecVP8 captures enum value "VP8"
	BasicStreamInfoVideoCodecVP8 string = "VP8"

	// BasicStreamInfoVideoCodecH264 captures enum value "H264"
	BasicStreamInfoVideoCodecH264 string = "H264"

	// BasicStreamInfoVideoCodecPNG captures enum value "PNG"
	BasicStreamInfoVideoCodecPNG string = "PNG"

	// BasicStreamInfoVideoCodecH265 captures enum value "H265"
	BasicStreamInfoVideoCodecH265 string = "H265"
)

// prop value enum
func (m *BasicStreamInfo) validateVideoCodecEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, basicStreamInfoTypeVideoCodecPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *BasicStreamInfo) validateVideoCodec(formats strfmt.Registry) error {
	if swag.IsZero(m.VideoCodec) { // not required
		return nil
	}

	// value enum
	if err := m.validateVideoCodecEnum("videoCodec", "body", m.VideoCodec); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this basic stream info based on context it is used
func (m *BasicStreamInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *BasicStreamInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BasicStreamInfo) UnmarshalBinary(b []byte) error {
	var res BasicStreamInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
