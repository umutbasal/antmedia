// Code generated by go-swagger;

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// JspPropertyGroupDescriptor jsp property group descriptor
//
// swagger:model JspPropertyGroupDescriptor
type JspPropertyGroupDescriptor struct {

	// buffer
	Buffer string `json:"buffer,omitempty"`

	// default content type
	DefaultContentType string `json:"defaultContentType,omitempty"`

	// deferred syntax allowed as literal
	DeferredSyntaxAllowedAsLiteral string `json:"deferredSyntaxAllowedAsLiteral,omitempty"`

	// el ignored
	ElIgnored string `json:"elIgnored,omitempty"`

	// error on undeclared namespace
	ErrorOnUndeclaredNamespace string `json:"errorOnUndeclaredNamespace,omitempty"`

	// include codas
	IncludeCodas []string `json:"includeCodas"`

	// include preludes
	IncludePreludes []string `json:"includePreludes"`

	// is Xml
	IsXML string `json:"isXml,omitempty"`

	// page encoding
	PageEncoding string `json:"pageEncoding,omitempty"`

	// scripting invalid
	ScriptingInvalid string `json:"scriptingInvalid,omitempty"`

	// trim directive whitespaces
	TrimDirectiveWhitespaces string `json:"trimDirectiveWhitespaces,omitempty"`

	// url patterns
	URLPatterns []string `json:"urlPatterns"`
}

// Validate validates this jsp property group descriptor
func (m *JspPropertyGroupDescriptor) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this jsp property group descriptor based on context it is used
func (m *JspPropertyGroupDescriptor) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *JspPropertyGroupDescriptor) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *JspPropertyGroupDescriptor) UnmarshalBinary(b []byte) error {
	var res JspPropertyGroupDescriptor
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
