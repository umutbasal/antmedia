// Code generated by go-swagger;

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/umutbasal/antmedia/models"

	"github.com/spf13/cobra"
)

// Schema cli for IWebRTCAdaptor

// register flags to command
func registerModelIWebRTCAdaptorFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerIWebRTCAdaptorNumberOfLiveStreams(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerIWebRTCAdaptorNumberOfTotalViewers(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerIWebRTCAdaptorStreams(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerIWebRTCAdaptorNumberOfLiveStreams(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	numberOfLiveStreamsDescription := ``

	var numberOfLiveStreamsFlagName string
	if cmdPrefix == "" {
		numberOfLiveStreamsFlagName = "numberOfLiveStreams"
	} else {
		numberOfLiveStreamsFlagName = fmt.Sprintf("%v.numberOfLiveStreams", cmdPrefix)
	}

	var numberOfLiveStreamsFlagDefault int32

	_ = cmd.PersistentFlags().Int32(numberOfLiveStreamsFlagName, numberOfLiveStreamsFlagDefault, numberOfLiveStreamsDescription)

	return nil
}

func registerIWebRTCAdaptorNumberOfTotalViewers(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	numberOfTotalViewersDescription := ``

	var numberOfTotalViewersFlagName string
	if cmdPrefix == "" {
		numberOfTotalViewersFlagName = "numberOfTotalViewers"
	} else {
		numberOfTotalViewersFlagName = fmt.Sprintf("%v.numberOfTotalViewers", cmdPrefix)
	}

	var numberOfTotalViewersFlagDefault int32

	_ = cmd.PersistentFlags().Int32(numberOfTotalViewersFlagName, numberOfTotalViewersFlagDefault, numberOfTotalViewersDescription)

	return nil
}

func registerIWebRTCAdaptorStreams(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: streams []string array type is not supported by go-swagger cli yet

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelIWebRTCAdaptorFlags(depth int, m *models.IWebRTCAdaptor, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, numberOfLiveStreamsAdded := retrieveIWebRTCAdaptorNumberOfLiveStreamsFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || numberOfLiveStreamsAdded

	err, numberOfTotalViewersAdded := retrieveIWebRTCAdaptorNumberOfTotalViewersFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || numberOfTotalViewersAdded

	err, streamsAdded := retrieveIWebRTCAdaptorStreamsFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || streamsAdded

	return nil, retAdded
}

func retrieveIWebRTCAdaptorNumberOfLiveStreamsFlags(depth int, m *models.IWebRTCAdaptor, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	numberOfLiveStreamsFlagName := fmt.Sprintf("%v.numberOfLiveStreams", cmdPrefix)
	if cmd.Flags().Changed(numberOfLiveStreamsFlagName) {

		var numberOfLiveStreamsFlagName string
		if cmdPrefix == "" {
			numberOfLiveStreamsFlagName = "numberOfLiveStreams"
		} else {
			numberOfLiveStreamsFlagName = fmt.Sprintf("%v.numberOfLiveStreams", cmdPrefix)
		}

		numberOfLiveStreamsFlagValue, err := cmd.Flags().GetInt32(numberOfLiveStreamsFlagName)
		if err != nil {
			return err, false
		}
		m.NumberOfLiveStreams = numberOfLiveStreamsFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveIWebRTCAdaptorNumberOfTotalViewersFlags(depth int, m *models.IWebRTCAdaptor, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	numberOfTotalViewersFlagName := fmt.Sprintf("%v.numberOfTotalViewers", cmdPrefix)
	if cmd.Flags().Changed(numberOfTotalViewersFlagName) {

		var numberOfTotalViewersFlagName string
		if cmdPrefix == "" {
			numberOfTotalViewersFlagName = "numberOfTotalViewers"
		} else {
			numberOfTotalViewersFlagName = fmt.Sprintf("%v.numberOfTotalViewers", cmdPrefix)
		}

		numberOfTotalViewersFlagValue, err := cmd.Flags().GetInt32(numberOfTotalViewersFlagName)
		if err != nil {
			return err, false
		}
		m.NumberOfTotalViewers = numberOfTotalViewersFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveIWebRTCAdaptorStreamsFlags(depth int, m *models.IWebRTCAdaptor, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	streamsFlagName := fmt.Sprintf("%v.streams", cmdPrefix)
	if cmd.Flags().Changed(streamsFlagName) {
		// warning: streams array type []string is not supported by go-swagger cli yet
	}

	return nil, retAdded
}
