// Code generated by go-swagger;

package broadcast_rest_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"antmedia/models"
)

// NewCreateBroadcastParams creates a new CreateBroadcastParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateBroadcastParams() *CreateBroadcastParams {
	return &CreateBroadcastParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateBroadcastParamsWithTimeout creates a new CreateBroadcastParams object
// with the ability to set a timeout on a request.
func NewCreateBroadcastParamsWithTimeout(timeout time.Duration) *CreateBroadcastParams {
	return &CreateBroadcastParams{
		timeout: timeout,
	}
}

// NewCreateBroadcastParamsWithContext creates a new CreateBroadcastParams object
// with the ability to set a context for a request.
func NewCreateBroadcastParamsWithContext(ctx context.Context) *CreateBroadcastParams {
	return &CreateBroadcastParams{
		Context: ctx,
	}
}

// NewCreateBroadcastParamsWithHTTPClient creates a new CreateBroadcastParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateBroadcastParamsWithHTTPClient(client *http.Client) *CreateBroadcastParams {
	return &CreateBroadcastParams{
		HTTPClient: client,
	}
}

/* CreateBroadcastParams contains all the parameters to send to the API endpoint
   for the create broadcast operation.

   Typically these are written to a http.Request.
*/
type CreateBroadcastParams struct {

	/* AutoStart.

	   Only effective if stream is IP Camera or Stream Source. If it's true, it starts automatically pulling stream. Its value is false by default
	*/
	AutoStart *bool

	/* Body.

	   Broadcast object. Set the required fields, it may be null as well.
	*/
	Body *models.Broadcast

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create broadcast params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateBroadcastParams) WithDefaults() *CreateBroadcastParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create broadcast params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateBroadcastParams) SetDefaults() {
	var (
		autoStartDefault = bool(false)
	)

	val := CreateBroadcastParams{
		AutoStart: &autoStartDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the create broadcast params
func (o *CreateBroadcastParams) WithTimeout(timeout time.Duration) *CreateBroadcastParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create broadcast params
func (o *CreateBroadcastParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create broadcast params
func (o *CreateBroadcastParams) WithContext(ctx context.Context) *CreateBroadcastParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create broadcast params
func (o *CreateBroadcastParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create broadcast params
func (o *CreateBroadcastParams) WithHTTPClient(client *http.Client) *CreateBroadcastParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create broadcast params
func (o *CreateBroadcastParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAutoStart adds the autoStart to the create broadcast params
func (o *CreateBroadcastParams) WithAutoStart(autoStart *bool) *CreateBroadcastParams {
	o.SetAutoStart(autoStart)
	return o
}

// SetAutoStart adds the autoStart to the create broadcast params
func (o *CreateBroadcastParams) SetAutoStart(autoStart *bool) {
	o.AutoStart = autoStart
}

// WithBody adds the body to the create broadcast params
func (o *CreateBroadcastParams) WithBody(body *models.Broadcast) *CreateBroadcastParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the create broadcast params
func (o *CreateBroadcastParams) SetBody(body *models.Broadcast) {
	o.Body = body
}

// WriteToRequest writes these params to a swagger request
func (o *CreateBroadcastParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AutoStart != nil {

		// query param autoStart
		var qrAutoStart bool

		if o.AutoStart != nil {
			qrAutoStart = *o.AutoStart
		}
		qAutoStart := swag.FormatBool(qrAutoStart)
		if qAutoStart != "" {

			if err := r.SetQueryParam("autoStart", qAutoStart); err != nil {
				return err
			}
		}
	}
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
