// Code generated by go-swagger;

package broadcast_rest_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewFilterBroadcastListV2Params creates a new FilterBroadcastListV2Params object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewFilterBroadcastListV2Params() *FilterBroadcastListV2Params {
	return &FilterBroadcastListV2Params{
		timeout: cr.DefaultTimeout,
	}
}

// NewFilterBroadcastListV2ParamsWithTimeout creates a new FilterBroadcastListV2Params object
// with the ability to set a timeout on a request.
func NewFilterBroadcastListV2ParamsWithTimeout(timeout time.Duration) *FilterBroadcastListV2Params {
	return &FilterBroadcastListV2Params{
		timeout: timeout,
	}
}

// NewFilterBroadcastListV2ParamsWithContext creates a new FilterBroadcastListV2Params object
// with the ability to set a context for a request.
func NewFilterBroadcastListV2ParamsWithContext(ctx context.Context) *FilterBroadcastListV2Params {
	return &FilterBroadcastListV2Params{
		Context: ctx,
	}
}

// NewFilterBroadcastListV2ParamsWithHTTPClient creates a new FilterBroadcastListV2Params object
// with the ability to set a custom HTTPClient for a request.
func NewFilterBroadcastListV2ParamsWithHTTPClient(client *http.Client) *FilterBroadcastListV2Params {
	return &FilterBroadcastListV2Params{
		HTTPClient: client,
	}
}

/* FilterBroadcastListV2Params contains all the parameters to send to the API endpoint
   for the filter broadcast list v2 operation.

   Typically these are written to a http.Request.
*/
type FilterBroadcastListV2Params struct {

	/* Offset.

	   starting point of the list

	   Format: int32
	*/
	Offset int32

	/* OrderBy.

	   asc for Ascending, desc Descending order
	*/
	OrderBy *string

	/* Size.

	   size of the return list (max:50 )

	   Format: int32
	*/
	Size int32

	/* SortBy.

	   field to sort
	*/
	SortBy *string

	/* Type.

	   type of the stream. Possible values are "liveStream", "ipCamera", "streamSource", "VoD"
	*/
	Type string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the filter broadcast list v2 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *FilterBroadcastListV2Params) WithDefaults() *FilterBroadcastListV2Params {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the filter broadcast list v2 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *FilterBroadcastListV2Params) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the filter broadcast list v2 params
func (o *FilterBroadcastListV2Params) WithTimeout(timeout time.Duration) *FilterBroadcastListV2Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the filter broadcast list v2 params
func (o *FilterBroadcastListV2Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the filter broadcast list v2 params
func (o *FilterBroadcastListV2Params) WithContext(ctx context.Context) *FilterBroadcastListV2Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the filter broadcast list v2 params
func (o *FilterBroadcastListV2Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the filter broadcast list v2 params
func (o *FilterBroadcastListV2Params) WithHTTPClient(client *http.Client) *FilterBroadcastListV2Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the filter broadcast list v2 params
func (o *FilterBroadcastListV2Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithOffset adds the offset to the filter broadcast list v2 params
func (o *FilterBroadcastListV2Params) WithOffset(offset int32) *FilterBroadcastListV2Params {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the filter broadcast list v2 params
func (o *FilterBroadcastListV2Params) SetOffset(offset int32) {
	o.Offset = offset
}

// WithOrderBy adds the orderBy to the filter broadcast list v2 params
func (o *FilterBroadcastListV2Params) WithOrderBy(orderBy *string) *FilterBroadcastListV2Params {
	o.SetOrderBy(orderBy)
	return o
}

// SetOrderBy adds the orderBy to the filter broadcast list v2 params
func (o *FilterBroadcastListV2Params) SetOrderBy(orderBy *string) {
	o.OrderBy = orderBy
}

// WithSize adds the size to the filter broadcast list v2 params
func (o *FilterBroadcastListV2Params) WithSize(size int32) *FilterBroadcastListV2Params {
	o.SetSize(size)
	return o
}

// SetSize adds the size to the filter broadcast list v2 params
func (o *FilterBroadcastListV2Params) SetSize(size int32) {
	o.Size = size
}

// WithSortBy adds the sortBy to the filter broadcast list v2 params
func (o *FilterBroadcastListV2Params) WithSortBy(sortBy *string) *FilterBroadcastListV2Params {
	o.SetSortBy(sortBy)
	return o
}

// SetSortBy adds the sortBy to the filter broadcast list v2 params
func (o *FilterBroadcastListV2Params) SetSortBy(sortBy *string) {
	o.SortBy = sortBy
}

// WithType adds the typeVar to the filter broadcast list v2 params
func (o *FilterBroadcastListV2Params) WithType(typeVar string) *FilterBroadcastListV2Params {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the filter broadcast list v2 params
func (o *FilterBroadcastListV2Params) SetType(typeVar string) {
	o.Type = typeVar
}

// WriteToRequest writes these params to a swagger request
func (o *FilterBroadcastListV2Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param offset
	if err := r.SetPathParam("offset", swag.FormatInt32(o.Offset)); err != nil {
		return err
	}

	if o.OrderBy != nil {

		// query param order_by
		var qrOrderBy string

		if o.OrderBy != nil {
			qrOrderBy = *o.OrderBy
		}
		qOrderBy := qrOrderBy
		if qOrderBy != "" {

			if err := r.SetQueryParam("order_by", qOrderBy); err != nil {
				return err
			}
		}
	}

	// path param size
	if err := r.SetPathParam("size", swag.FormatInt32(o.Size)); err != nil {
		return err
	}

	if o.SortBy != nil {

		// query param sort_by
		var qrSortBy string

		if o.SortBy != nil {
			qrSortBy = *o.SortBy
		}
		qSortBy := qrSortBy
		if qSortBy != "" {

			if err := r.SetQueryParam("sort_by", qSortBy); err != nil {
				return err
			}
		}
	}

	// path param type
	if err := r.SetPathParam("type", o.Type); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
